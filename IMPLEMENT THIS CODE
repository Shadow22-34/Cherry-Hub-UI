-- Connect dropdown toggle
selectorButton.MouseButton1Click:Connect(toggleDropdown)

-- Add hover effects to dropdown selector
dropdownSelector.MouseEnter:Connect(function()
    TweenService:Create(dropdownSelector, TweenInfo.new(0.2), {
        BackgroundColor3 = Color3.fromRGB(50, 50, 55)
    }):Play()
end)

dropdownSelector.MouseLeave:Connect(function()
    TweenService:Create(dropdownSelector, TweenInfo.new(0.2), {
        BackgroundColor3 = Color3.fromRGB(40, 40, 45)
    }):Play()
end)

-- Replace the old click effect with a new radial wave effect
selectorButton.MouseButton1Down:Connect(function(x, y)
    -- Get relative position for the click
    local relativeX = x - selectorButton.AbsolutePosition.X
    local relativeY = y - selectorButton.AbsolutePosition.Y
    
    -- Create wave container
    local waveContainer = Instance.new("Frame")
    waveContainer.Name = "WaveEffect"
    waveContainer.Parent = dropdownSelector
    waveContainer.BackgroundTransparency = 1
    waveContainer.Size = UDim2.new(1, 0, 1, 0)
    waveContainer.ClipsDescendants = true
    waveContainer.ZIndex = 10
    
    -- Create multiple concentric circles for wave effect
    for i = 1, 3 do
        local wave = Instance.new("Frame")
        wave.Name = "Wave_" .. i
        wave.Parent = waveContainer
        wave.BackgroundColor3 = Color3.fromRGB(255, 100, 120)
        wave.BackgroundTransparency = 0.7 + (i * 0.1)
        wave.BorderSizePixel = 0
        wave.Position = UDim2.new(0, relativeX - 5, 0, relativeY - 5)
        wave.Size = UDim2.new(0, 10, 0, 10)
        wave.ZIndex = 10
        
        local waveCorner = Instance.new("UICorner")
        waveCorner.CornerRadius = UDim.new(1, 0)
        waveCorner.Parent = wave
        
        -- Stagger the animations slightly
        local delay = (i - 1) * 0.1
        spawn(function()
            wait(delay)
            TweenService:Create(wave, TweenInfo.new(0.6, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), {
                Size = UDim2.new(0, 100 + (i * 20), 0, 100 + (i * 20)),
                Position = UDim2.new(0, relativeX - 50 - (i * 10), 0, relativeY - 50 - (i * 10)),
                BackgroundTransparency = 1
            }):Play()
        end)
    end
    
    -- Add a flash effect
    local flash = Instance.new("Frame")
    flash.Name = "Flash"
    flash.Parent = dropdownSelector
    flash.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    flash.BackgroundTransparency = 0.9
    flash.BorderSizePixel = 0
    flash.Size = UDim2.new(1, 0, 1, 0)
    flash.ZIndex = 9
    
    local flashCorner = Instance.new("UICorner")
    flashCorner.CornerRadius = UDim.new(0, 6)
    flashCorner.Parent = flash
    
    -- Animate the flash
    TweenService:Create(flash, TweenInfo.new(0.3), {
        BackgroundTransparency = 1
    }):Play()
    
    -- Slight scale down effect
    TweenService:Create(dropdownSelector, TweenInfo.new(0.1), {
        Size = UDim2.new(1, -32, 0, 34),
        Position = UDim2.new(0, 16, 0, 41)
    }):Play()
    
    -- Clean up effects after animation
    game:GetService("Debris"):AddItem(waveContainer, 0.8)
    game:GetService("Debris"):AddItem(flash, 0.3)
end)

selectorButton.MouseButton1Up:Connect(function()
    -- Scale back to original size
    TweenService:Create(dropdownSelector, TweenInfo.new(0.2), {
        Size = UDim2.new(1, -30, 0, 36),
        Position = UDim2.new(0, 15, 0, 40)
    }):Play()
end)

-- Also update the option click effect to match
for i, theme in ipairs(themes) do
    local option = createOption(theme, i)
    
    -- Replace the option's click effect
    option.MouseButton1Down:Connect(function(x, y)
        -- Get relative position for the click
        local relativeX = x - option.AbsolutePosition.X
        local relativeY = y - option.AbsolutePosition.Y
        
        -- Create pulse effect
        local pulse = Instance.new("Frame")
        pulse.Name = "PulseEffect"
        pulse.Parent = option
        pulse.BackgroundColor3 = theme.color
        pulse.BackgroundTransparency = 0.7
        pulse.BorderSizePixel = 0
        pulse.Position = UDim2.new(0, relativeX - 5, 0, relativeY - 5)
        pulse.Size = UDim2.new(0, 10, 0, 10)
        pulse.ZIndex = 7
        
        local pulseCorner = Instance.new("UICorner")
        pulseCorner.CornerRadius = UDim.new(1, 0)
        pulseCorner.Parent = pulse
        
        -- Create glow effect
        local glow = Instance.new("ImageLabel")
        glow.Name = "Glow"
        glow.Parent = pulse
        glow.BackgroundTransparency = 1
        glow.Position = UDim2.new(0.5, -20, 0.5, -20)
        glow.Size = UDim2.new(0, 40, 0, 40)
        glow.Image = "rbxassetid://4996891970"
        glow.ImageColor3 = theme.color
        glow.ImageTransparency = 0.5
        glow.ZIndex = 6
        
        -- Animate the pulse
        TweenService:Create(pulse, TweenInfo.new(0.5, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), {
            Size = UDim2.new(0, 80, 0, 80),
            Position = UDim2.new(0, relativeX - 40, 0, relativeY - 40),
            BackgroundTransparency = 1
        }):Play()
        
        -- Animate the glow
        TweenService:Create(glow, TweenInfo.new(0.5, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), {
            Size = UDim2.new(0, 100, 0, 100),
            Position = UDim2.new(0.5, -50, 0.5, -50),
            ImageTransparency = 1
        }):Play()
        
        -- Clean up effects after animation
        game:GetService("Debris"):AddItem(pulse, 0.5)
        
        -- Highlight the option
        TweenService:Create(option, TweenInfo.new(0.2), {
            BackgroundColor3 = Color3.fromRGB(60, 60, 65),
            BackgroundTransparency = 0
        }):Play()
    end)
    
    option.MouseButton1Up:Connect(function()
        -- Reset the option background
        TweenService:Create(option, TweenInfo.new(0.3), {
            BackgroundTransparency = 1
        }):Play()
        
        -- Select the theme and close dropdown
        selectedTheme = theme
        selectedText.Text = theme.name
        toggleDropdown()
    end)
end